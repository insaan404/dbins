"""1

Revision ID: 6d2a7cb6d8d1
Revises: 
Create Date: 2023-04-03 04:31:05.528624

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6d2a7cb6d8d1'
down_revision = None
branch_labels = None
depends_on = None

naming_convention = {
    "ix": 'ix_%(column_0_label)s',
    "uq": "uq_%(table_name)s_%(column_0_name)s",
    "ck": "ck_%(table_name)s_%(column_0_name)s",
    "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
    "pk": "pk_%(table_name)s"
}

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_driver')
    with op.batch_alter_table('driver', schema=None) as batch_op:
        batch_op.alter_column('vehicle_id',
               existing_type=sa.CHAR(length=32),
               nullable=True, naming_convention=naming_convention)

    with op.batch_alter_table('office', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['area_name'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('office', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('driver', schema=None) as batch_op:
        batch_op.alter_column('vehicle_id',
               existing_type=sa.CHAR(length=32),
               nullable=False)

    op.create_table('_alembic_tmp_driver',
    sa.Column('_pk', sa.CHAR(length=32), nullable=False),
    sa.Column('vehicle_id', sa.CHAR(length=32), nullable=True),
    sa.Column('employ_id', sa.CHAR(length=32), nullable=False),
    sa.ForeignKeyConstraint(['employ_id'], ['employ.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.id'], ),
    sa.PrimaryKeyConstraint('_pk')
    )
    # ### end Alembic commands ###
